package Lab_6_Pack;

import Lab_3_Pack.PrivateAuto;
import Lab_3_Pack.Record;
import Lab_5_Pack.RecordDAO;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;

public class Main extends JFrame {
    private JButton addAutoButton;
    private JButton addReport;
    private JPanel mainPanel;
    private JLabel mainHeader;
    private JButton deleteRecord;
    // private JComboBox comboBox1;
    private JList list1;
    private JButton updateReport;
    private JButton findReport;
    private JLabel successText;
    RecordDAO recordDAO = new RecordDAO();
    List<Record> recordList = new ArrayList<>(10);


    public Main(String title) {
        super(title);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(mainPanel);
        this.successText.setVisible(false);
        this.pack();


        recordList = recordDAO.getAll();
        Vector<Record> records = new Vector<>(recordList);
        DefaultComboBoxModel<Record> recordDCBM = new DefaultComboBoxModel<>(records);
        list1.setModel(recordDCBM);

        addReport.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                JFrame addPanel = new Add("Add");
                addPanel.setBounds(615, 315, 750, 450);
                addPanel.setVisible(true);
                dispose();
            }
        });

        deleteRecord.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Record selectedRecord = (Record) list1.getSelectedValue();
                recordDAO.delete(selectedRecord);
                successText.setVisible(true);
            }
        });

        updateReport.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Update updatePanel = new Update("Update");
                updatePanel.setBounds(615, 315, 750, 450);
                updatePanel.setVisible(true);
                dispose();
            }
        });
        findReport.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame findPanel = new Find("Find");
                findPanel.setBounds(615, 315, 750, 450);
                findPanel.setVisible(true);
                dispose();
            }
        });
    }

    public static void main(String[] args) {
        JFrame mainPanel = new Main("Main");
        mainPanel.setBounds(615, 315, 750, 450);
        mainPanel.setVisible(true);


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-14407116));
        mainHeader = new JLabel();
        Font mainHeaderFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 24, mainHeader.getFont());
        if (mainHeaderFont != null) mainHeader.setFont(mainHeaderFont);
        mainHeader.setForeground(new Color(-7357510));
        mainHeader.setText("MAIN MENU");
        mainPanel.add(mainHeader, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        list1 = new JList();
        list1.setBackground(new Color(-7357510));
        Font list1Font = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 16, list1.getFont());
        if (list1Font != null) list1.setFont(list1Font);
        list1.setForeground(new Color(-14407116));
        mainPanel.add(list1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        successText = new JLabel();
        Font successTextFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 19, successText.getFont());
        if (successTextFont != null) successText.setFont(successTextFont);
        successText.setForeground(new Color(-6841669));
        successText.setText("YOUR RECORD WAS DELETED ");
        mainPanel.add(successText, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 14, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-6841669));
        label1.setText("Pick From List To Delete");
        mainPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteRecord = new JButton();
        deleteRecord.setBackground(new Color(-7357510));
        Font deleteRecordFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 18, deleteRecord.getFont());
        if (deleteRecordFont != null) deleteRecord.setFont(deleteRecordFont);
        deleteRecord.setForeground(new Color(-13223861));
        deleteRecord.setText("Delete Report");
        mainPanel.add(deleteRecord, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        findReport = new JButton();
        findReport.setBackground(new Color(-7357510));
        Font findReportFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 18, findReport.getFont());
        if (findReportFont != null) findReport.setFont(findReportFont);
        findReport.setForeground(new Color(-13223861));
        findReport.setText("Find Report");
        mainPanel.add(findReport, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        updateReport = new JButton();
        updateReport.setBackground(new Color(-7357510));
        Font updateReportFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 18, updateReport.getFont());
        if (updateReportFont != null) updateReport.setFont(updateReportFont);
        updateReport.setForeground(new Color(-13223861));
        updateReport.setText("Update Report");
        mainPanel.add(updateReport, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addReport = new JButton();
        addReport.setBackground(new Color(-7357510));
        Font addReportFont = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 18, addReport.getFont());
        if (addReportFont != null) addReport.setFont(addReportFont);
        addReport.setForeground(new Color(-13223861));
        addReport.setText("Add Report");
        mainPanel.add(addReport, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Roboto Light", Font.PLAIN, 14, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-6841669));
        label2.setText("Pick To Go To The New Window");
        mainPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
